name: 'ðŸ“¦ Build application'

on: 
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string
      NPM_REGISTRY:
        description: "Hostname of NPM registry to setup"
        required: false
        type: string
        default: "registry.npmjs.org"
      NPM_SCOPE:
        description: "Account owner to use as GitHub Packages scope"
        type: string
        required: false
      USE_PAT:
        description: For old repos that used Personal Access tokens they should pass a TRUE. New repos will use $GITHUB_TOKEN.
        required: false
        type: boolean
        default: false
      IS_RELEASE_CANDIDATE:
        description: If this a release candidate package, it will be published with an affix in NPM.
        required: false
        type: boolean
        default: false
      USE_JS:
        description: If the project uses JS or TS, the publish command changes.
        required: false
        type: boolean
        default: false
      USE_PROTOC:
        description: If this projects uses protobuff/protoc.
        required: false
        type: boolean
        default: false
      PROTOC_VERSION:
        description: Protoc version to download from GitHub
        required: false
        type: string
        default: 21.12

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN_RO }}
    steps:
      - name: Setup node
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/npm/setup-node.v1@main
        with:
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          NPM_REGISTRY: ${{ inputs.NPM_REGISTRY }}
          NPM_SCOPE: ${{ inputs.NPM_SCOPE }}
      - name: Download and unzip dependencies artifact
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/git/download-artifact.v1@main
      - name: Install protoc
        if: ${{ inputs.USE_PROTOC }}
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/protoc/install.v1@main
        with:
          PROTOC_VERSION: ${{ inputs.PROTOC_VERSION }}
      - name: Build protoc and get output
        if: ${{ inputs.USE_PROTOC && github.event_name == 'pull_request' }}
        run: |
          npm run build:proto > pr-message.txt 2>&1
          sed -i '/> Proto models created/ s/^>/####/' pr-message.txt
        shell: bash
      - name: Comment PR with proto build output
        if: ${{ inputs.USE_PROTOC && github.event_name == 'pull_request' }}
        uses: Lattice-Trade/actions-comment-pull-request@v1
        with:
          filePath: pr-message.txt
          reactions: eyes, rocket
      - name: Build code
        if: ${{ !inputs.USE_JS }}
        run: npm run build
        shell: bash
      - name: Move built proto models inside dist
        if: ${{ inputs.USE_PROTOC }}
        run: cp -r src/services dist/ || true
        shell: bash
      - name: Set the right publish token (PAT or GITHUB_TOKEN)
        if: ${{ inputs.NPM_REGISTRY == 'npm.pkg.github.com' }}
        id: token
        uses: Lattice-Trade/membrane-github-template-actions/composite-actions/npm/set-publish-token.v1@main
        with:
          USE_PAT: ${{ inputs.USE_PAT }}
          NPM_TOKEN_PUBLISH: ${{ secrets.NPM_TOKEN_PUBLISH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release candidate package to GitHub Package Registry
        if: ${{ inputs.IS_RELEASE_CANDIDATE && inputs.NPM_REGISTRY == 'npm.pkg.github.com' }}
        run: |
          npm version $(jq -r .version package.json)-rc-$(echo ${GITHUB_SHA} | cut -c1-7) --git-tag-version false
          if [ ${{ inputs.USE_JS }} = 'false' ];then 
            cp package.json dist/
            cp README.md dist/ || true
            npm publish dist --tag beta
          else
            npm publish --tag beta
          fi
        env:
          NPM_TOKEN: ${{ steps.token.outputs.PUBLISH_TOKEN }}
      - name: Publish stable package to GitHub Package Registry
        # This job only runs when we try to publish new SDKs as we set our own github registry instead of npm public registry
        if: ${{ !inputs.IS_RELEASE_CANDIDATE && inputs.NPM_REGISTRY == 'npm.pkg.github.com' }}
        run: |
          if [ ${{ inputs.USE_JS }} = 'false' ];then 
            cp package.json dist/
            cp README.md dist/ || true
            npm publish dist
          else
            npm publish
          fi
        env:
          NPM_TOKEN: ${{ steps.token.outputs.PUBLISH_TOKEN }}